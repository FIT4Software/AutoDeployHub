name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  connect-sql-server:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SQL Server tools
        run: choco install sqlcmd

      - name: Execute SQL Scripts in Order
        shell: pwsh
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        run: |
          # Get all folders and subfolders sorted in ascending order.
          $folders = Get-ChildItem -Path "220 - SQL" -Recurse -Directory | Sort-Object FullName
      
          foreach ($folder in $folders) {
            Write-Output "Processing folder: $($folder.FullName)"
      
            # Get and sort the SQL files in each folder
            $sqlFiles = Get-ChildItem -Path $folder.FullName -Filter *.sql | Sort-Object Name
      
            foreach ($file in $sqlFiles) {
              try {
                Write-Output "Executing $($file.FullName)..."
      
                # Capture the output of sqlcmd
                $output = sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P $env:SQL_PASSWORD -d $env:SQL_DATABASE -i $file.FullName 2>&1
      
                # Print the output for visibility
                Write-Output "Result of $($file.Name):"
                Write-Output $output
      
                # Check for errors in the output
                if ($LASTEXITCODE -ne 0) {
                  Write-Error "Error executing $($file.Name): $output"
                } else {
                  Write-Output "Successfully executed $($file.Name)"
                }
              } catch {
                Write-Error "Failed to execute $($file.Name): $($_.Exception.Message)"
              }
            }
          }
