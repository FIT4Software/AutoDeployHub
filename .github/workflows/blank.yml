# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  connect-sql-server:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner provided by GitHub

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up .NET SDK (only needed if the project involves .NET tools)
    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0' # Specify the .NET version

    # Step 3: Install SQL Server tools (sqlcmd)
    - name: Install SQL Server tools
      run: |
        sudo apt-get update # Update package lists
        sudo apt-get install -y mssql-tools unixodbc-dev # Install mssql-tools and dependencies
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc # Add sqlcmd to PATH
        source ~/.bashrc # Reload shell configuration

    # Step 4: Connect to the SQL Server and run a query
    - name: Connect to SQL Server and run a query
      env:
        SQL_SERVER: 'mes-arido-database.database.windows.net'  
        SQL_USER: 'opdbmanager'   
        SQL_PASSWORD: 'DBM4n4g3r'  
        SQL_DATABASE: 'MESDB'  # Replace with the name of your database
      run: |
        # Use sqlcmd to connect to the SQL Server and execute a query
        sqlcmd -S $SQL_SERVER -U $SQL_USER -P $SQL_PASSWORD -d $SQL_DATABASE -Q "SELECT * FROM Sites FOR JSON AUTO;" -o result.json
        
        # Check the output by displaying the content of the result.json file
        cat result.json
